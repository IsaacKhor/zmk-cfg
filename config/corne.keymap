/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM Left";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            hold-trigger-key-positions = <6 18 30 39 7 8 9 10 11 19 20 21 22 23 31 32 33 34 35 40 41>;
            tapping-term-ms = <200>;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM Right";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&kp TAB    &kp SQT       &kp COMMA    &kp DOT      &kp P         &kp Y              &kp F        &kp G         &kp C        &kp R        &kp L         &kp FSLH
&kp ESC    &hml LCTRL A  &hml LALT O  &hml LCMD E  &hml LSHFT U  &kp I              &kp D        &hmr RSHFT H  &hmr RCMD T  &hmr RALT N  &hmr RCTRL S  &kp MINUS
&kp LSHFT  &kp SEMI      &kp Q        &kp J        &kp K         &kp X              &kp B        &kp M         &kp W        &kp V        &kp Z         &kp RSHFT
                                      &lt 5 TAB    &lt 3 ESCAPE  &lt 1 BACKSPACE    &lt 2 SPACE  &lt 4 ENTER   &trans
            >;
        };

        num {
            bindings = <
&none  &none   &kp MINUS  &kp DOT  &kp FSLH  &none    &none  &kp LS(PLUS)  &kp LS(STAR)  &kp EQUAL  &none   &none
&none  &kp N6  &kp N2     &kp N0   &kp N4    &none    &none  &kp N5        &kp N1        &kp N3     &kp N7  &none
&none  &none   &none      &none    &kp N8    &none    &none  &kp N9        &none         &none      &none   &none
                          &none    &none     &none    &none  &none         &none
            >;
        };

        sym {
            bindings = <
&none  &none          &kp GRAVE     &kp LS(TILDE)  &kp LS(POUND)  &none    &none  &kp LS(PRCNT)  &kp LBKT      &kp RBKT       &none          &none
&none  &kp LS(UNDER)  &kp LS(LBRC)  &kp LS(RBRC)   &kp LS(DLLR)   &none    &none  &kp MINUS      &kp LS(LPAR)  &kp LS(RPAR)   &kp LS(QMARK)  &none
&none  &kp LS(EXCL)   &kp LS(AMPS)  &kp BSLH       &kp LS(COLON)  &none    &none  &kp LS(QMARK)  &kp LS(PIPE)  &kp LS(CARET)  &kp LS(AT)     &none
                                    &none          &none          &none    &none  &none          &none
            >;
        };

        fn {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp LG(LC(LEFT))  &kp LS(LG(LBKT))  &kp LS(LG(RBKT))  &kp RG(RC(RIGHT))  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp LEFT          &kp DOWN          &kp UP            &kp RIGHT          &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans            &trans            &trans            &trans             &trans
                        &trans  &trans  &trans    &trans  &trans            &trans
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        meta {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &none  &sys_reset     &sys_reset   &none  &none  &none  &none  &none
&none  &none         &none         &none         &none  &bootloader    &bootloader  &none  &none  &none  &none  &none
&none  &bt BT_CLR    &none         &none         &none  &none          &none        &none  &none  &none  &none  &none
                                   &none         &none  &none          &none        &none  &none
            >;
        };
    };
};
